openapi: "3.0.0"
info:
  version: 1.0.0
  title: Patient Management Service
  description: REST part of the Patient Management Service
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /Patient:
    post:
      description: add a new patient and updates its urgency for further treatment. If needed, extra info will be requested from the Administrative worker. 
      operationId: addPatient
      requestBody: 
        description: Information of the patient and urgency of the treatment
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: patient created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      discription: get a list of all patients
      operationId: getAllPatients
      responses:
        '200':
          description: accepted quote response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      
  patient/{patientId}:
    get:
      discription: get the patient with id patientId
      operationId: getPatient
      parameters:
        - name: patientId
          in: query
          description: unique id of the patient that is requested
          required: true
          schema:
            type: int
      responses:
        '200':
          description: patient information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      put:
        description: updates the patients information of a patient
        operationId: upDatePatient
        parameters:
          - name: patientId
            in: query
            description: unique id of the patient that is requested
            required: true
            schema:
              type: int
        requestBody:
          description: info of the patient that needs to be updated
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        responses:
          '200':
            description: patient updated
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Patient'
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  patient/{patientId}/medicalRecord:
    get:
      discription: get the sensitive medical record of the patitient with patientid
      operationId: getOverview
      parameters:
        - name: patientId
          in: query
          description: unique id of the patient that is requested
          required: true
          schema:
            type: int
      responses:
        '200':
          description: patient medical record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalReord'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     

 patient/{patientId}/medication:
    get:
      discription: get the information of what medication the patient needs
      operationId: getMedication
      parameters:
        - name: patientId
          in: query
          description: unique id of the patient that is requested
          required: true
          schema:
            type: int
      responses:
        '200':
          description: patient medication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationArray'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'    
      post:
        description: add new medication that the patient needs
        operationId: prescribeMedication
        requestBody: 
          description: the medication, dosis, and frequency
          required: true
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Medication'
        responses:
          '200':
            description: medication added
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Patient'
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /assignPersonnel:
    post:
      description: add a personnel for the patient 
      operationId: assignPersonnel
      requestBody: 
        description: personnelId that is assigned to the patient id 
        required: true
        content: 
          application/json:
            schema:
                $ref: '#/components/schemas/PersonnelAssignment'
      responses:
        '200':
          description: personnel assigned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonnelAssignment'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    /assignIntervention:
      post:
        description: add a intervention for the patient 
        operationId: assignIntervention
        requestBody: 
          description: interventionId that is assigned to the patient id 
          required: true
          content: 
            application/json:
              schema:
                  $ref: '#/components/schemas/InterventionAssignment'
        responses:
          '200':
            description: intervention assigned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/interventionAssignment'
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

    /assignRoom:
    post:
      description: add a room for the patient 
      operationId: assignRoom
      requestBody: 
        description: roomid that is assigned to the patient id 
        required: true
        content: 
          application/json:
            schema:
                $ref: '#/components/schemas/RoomAssignment'
      responses:
        '200':
          description: room assigned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomAssignment'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
        

  
        
components:
  schemas:
    Patient:
      type: object
      required:
        - name
        - lastname
        - urgency
        - patientId
      properties:
        name:
          type: string
        lastname:
          type: string
        patientId:
          type: int
        ....
        
    MedicalRecord:
      type: object
      required:
        - patientId
        - name
        - lastname
        - ...
      properties:
        patientId:
          type: string
        name:
          type: string
        lastname:
          type: string
        ...

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    RoomAssignment:
      type: object
      required: 
        - roomId
        - patientId
      properties:
        roomId:
          type: integer
        patientId:
          type: integer

    PersonnelAssignment:
      type: object
      required: 
        - personnelId
        - patientId
      properties:
        personnelId:
          type: integer
        patientId:
          type: integer

    InterventionAssignment:
      type: object
      required: 
        - interventionId
        - patientId
      properties:
        interventionId:
          type: integer
        patientId:
          type: integer

    
asyncapi: 2.6.0
info:
  title: Hospital API
  version: '1.0.0'
channels:
  patient/notify:
    subscribe:
      summary: Notify that a new patient has arrived in the hospital
      operationId: notifyNewPatient
      message:
        description: extra info if the patient needs a room, has to be updated,
        name: NewPatient
        payload:
          type: object
          additionalProperties: false
          properties:
            patientId:
              type: string
            updateInfo:
              type: boolean
            needsRoom:
              type: boolean

